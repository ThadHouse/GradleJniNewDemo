import edu.wpi.first.jni.JniSymbolCheck
import edu.wpi.first.jni.WindowsExtractSymbols

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample CPP project to get you started.
 */

plugins {
    id 'com.gradle.build-scan' version '2.1'

    // Apply the cpp-library plugin to add support for building CPP libraries
    id 'cpp-library'

    id 'edu.wpi.first.GradleJni' version '424242.0.0-local'

    // Apply the cpp-unit-test plugin to add support for building and running CPP test executables
    id 'cpp-unit-test'

    //id 'edu.wpi.first.Toolchain' version '2019.2.8'
}


buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

evaluationDependsOn('java')

//Set the target operating system and architecture for this library
library {
    linkage = [Linkage.STATIC, Linkage.SHARED]
    targetMachines.add(machines.windows.x86_64)
    targetMachines.add(machines.windows.x86)
    targetMachines.add(machines.linux.x86_64)
    targetMachines.add(machines.macOS.x86_64)
    //targetMachines.add(machines.windows.architecture('linuxathena'))


    jni.addJavaCompile(project('java').tasks.named('compileJava'))
    jni.addJavaTest(project('java').tasks.named('test'))
    //jni.addCrossCompile(machines.windows.architecture('linuxathena'))
    jni.checkSymbols true
}
